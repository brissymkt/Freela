.nested-fields.factor-container.row.othsys-input-hoverable
	.col-md-7.col-xs-7.col-lg-7.col-sm-7.bordered-div 
		.row class="#{f.object.persisted? ? 'with-text': 'without-text'}"
			.text-inputs-container 
				.col-md-6.col-lg-7.col-sm-6.col-xs-6 class="#{f.object.persisted? ? "thin-box" : "only-inputs-box"}"
					= f.hidden_field :id
					- if f.object.persisted?
						= link_to "#{f.object.name}", edit_user_environmental_analysis_factor_path(f.object.environmental_analysis_id, f.object.id), :class => "factor-name-display js-link-to-factor"
					- else
						a.factor-name-display href="javascript:void(0);"
					= f.input :name, :placeholder => "#{t :name_placeholder}", :label => false, :input_html => {:class => "js-name-input"}
				.col-md-4.col-lg-3.col-sm-4.col-xs-4.right-offset
					ul.buttons-list
						- if f.object.persisted?
							li
								a.fa.fa-edit.edit-button.my-button href='javascript:void(0);'
						li
							a.fa.fa-check-square-o.my-button.placebo-button
						li
							= link_to_remove_association "", f, :class => "fa fa-remove remove-button my-button", 'data-confirm' => "#{t :remove_factor_dialog}"
				.col-md-2.col-lg-2.col-sm-2.col-xs-2.right-offset
					- if f.object.persisted?
						a.fa.fa-chevron-down.contract-button.my-button href='javascript:void(0);'
				.col-md-12.col-lg-12.col-sm-12.col-sm-12.description-container
					- if f.object.persisted?
						p.factor-description-display
							b
								= "#{t :description_placeholder}: "
							span.factor-description = f.object.description
					= f.input :description, :placeholder => "#{t :description_placeholder}", :label => false, :as => :string, :input_html => {:class => "js-description-input"}
				
	.col-md-3.col-xs-3.col-lg-3.col-sm-3.slider-container
		.importance-container
			= f.hidden_field :importance, :class => "js-importance-input"
			.js-slider.js-importance-slider
			.importance-caption.slider-caption
				h3.js-slider-caption
	.col-md-2.col-xs-2.col-lg-2.col-sm-2
		.factor-grade-container
			h3.text-center.grade-field
				= number_with_precision(f.object.grade, :precision => 1) 
	.clearfix
	